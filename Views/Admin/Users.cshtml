@model IEnumerable<CarRentalMVC.Models.User>
@using Microsoft.AspNetCore.Identity
@inject UserManager<CarRentalMVC.Models.User> UserManager
@inject SignInManager<CarRentalMVC.Models.User> SignInManager
@{
    ViewData["Title"] = "Manage Users";
}

<!-- Hero Section with Background -->
<div class="hero-section position-relative mb-5">
    <div class="hero-overlay"></div>
    <div class="container position-relative py-5">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto text-center text-white">
                <h1 class="display-3 fw-bold mb-4 animate__animated animate__fadeInDown">User Management</h1>
                <p class="lead fs-4 mb-4 animate__animated animate__fadeInUp">Administer user accounts and permissions</p>
            </div>
        </div>
    </div>
</div>

<!-- Users List Section -->
<div class="container mb-5">
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h4 class="card-title fw-bold mb-0">Registered Users</h4>
                    </div>
                    
                    <div class="table-responsive rounded shadow-sm border bg-white">
                        <table class="table table-hover align-middle mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th class="text-primary">Profile</th>
                                    <th class="text-primary">Username</th>
                                    <th class="text-primary">Email</th>
                                    <th class="text-primary">Role</th>
                                    <th class="text-primary">Status</th>
                                    <th class="text-primary">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model)
                                {
                                    <tr class="align-middle">
                                        <td>
                                            <img src="~/images/profiles/@(string.IsNullOrEmpty(user.ProfileImageUrl) ? "default.png" : user.ProfileImageUrl)"
                                                 class="rounded-circle img-thumbnail me-2" style="width:40px; height:40px; object-fit:cover;" alt="Profile" />
                                        </td>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div>
                                                    <span class="fw-semibold fs-6">@user.Name</span>
                                                    <small class="d-block text-muted">@user.FirstName @user.LastName</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="text-secondary">@user.Email</td>
                                        <td>
                                            <span class="badge rounded-pill px-3 py-2 bg-@(user.Role == CarRentalMVC.Models.UserRole.User ? "danger" : "info") text-white fs-6">
                                                @user.Role
                                            </span>
                                        </td>
                                        <td>
                                            @{
                                                string statusClass = user.Status switch
                                                {
                                                    CarRentalMVC.Models.UserStatus.Active => "success",
                                                    CarRentalMVC.Models.UserStatus.Inactive => "secondary",
                                                    CarRentalMVC.Models.UserStatus.Suspended => "danger",
                                                    CarRentalMVC.Models.UserStatus.PendingVerification => "warning",
                                                    _ => "secondary"
                                                };
                                            }
                                            <span class="badge rounded-pill px-3 py-2 bg-@statusClass fs-6">@user.Status</span>
                                        </td>
                                        <td>
                                            <div class="btn-group">
                                                <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                                    <i class="bi bi-gear-fill me-1"></i> Status
                                                </button>
                                                <ul class="dropdown-menu">
                                                    @foreach (var status in Enum.GetValues(typeof(CarRentalMVC.Models.UserStatus)))
                                                    {
                                                        <li>
                                                            <form method="post" action="@Url.Action("UpdateUserStatus", "Admin", new { userId = user.Id, status = status })">
                                                                <button type="submit" class="dropdown-item @(user.Status.ToString() == status.ToString() ? "active" : "")">
                                                                    @status
                                                                </button>
                                                            </form>
                                                        </li>
                                                    }
                                                </ul>
                                                <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                                    <i class="bi bi-person-badge me-1"></i> Role
                                                </button>
                                                <ul class="dropdown-menu">
                                                    @foreach (var role in Enum.GetValues(typeof(CarRentalMVC.Models.UserRole)))
                                                    {
                                                        <li>
                                                            <form method="post" action="@Url.Action("UpdateUserRole", "Admin", new { userId = user.Id, role = role })">
                                                                <button type="submit" class="dropdown-item @(user.Role.ToString() == role.ToString() ? "active" : "")">
                                                                    @role
                                                                </button>
                                                            </form>
                                                        </li>
                                                    }
                                                </ul>
                                                <form method="post" action="@Url.Action("DeleteUser", "Admin", new { userId = user.Id })" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this user?');">
                                                    <button type="submit" class="btn btn-sm btn-outline-danger" title="Delete User">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </form>
                                                <form asp-action="ToggleAdmin" asp-route-userId="@user.Id" method="post" style="display:inline">
                                                    <button type="submit" class="btn btn-sm @(UserManager.IsInRoleAsync(user, "Admin").Result ? "btn-warning" : "btn-success")">
                                                        @(UserManager.IsInRoleAsync(user, "Admin").Result ? "Remove Admin" : "Make Admin")
                                                    </button>
                                                </form>
                                            </div>

                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Other Services Section -->
<div class="container mb-5">
    <h4 class="fw-bold mb-4 text-primary">Other Services</h4>
    <div class="row g-4">
        <div class="col-md-4">
            <div class="service-card card h-100 shadow-sm border-0 text-center p-4">
                <div class="service-icon mb-3">
                    <i class="bi bi-people display-5 text-info"></i>
                </div>
                <h5 class="fw-semibold mb-2">User Reservations</h5>
                <p class="text-muted mb-3">View and manage all user bookings and reservations in one place.</p>
                <a asp-action="UserReservations" class="btn btn-outline-primary w-100">Go to Reservations</a>
            </div>
        </div>
        <div class="col-md-4">
            <div class="service-card card h-100 shadow-sm border-0 text-center p-4">
                <div class="service-icon mb-3">
                    <i class="bi bi-car-front display-5 text-success"></i>
                </div>
                <h5 class="fw-semibold mb-2">Manage Cars</h5>
                <p class="text-muted mb-3">Add, edit, or remove cars from the rental fleet.</p>
                <a asp-action="Cars" class="btn btn-outline-success w-100">Manage Cars</a>
            </div>
        </div>
        <div class="col-md-4">
            <div class="service-card card h-100 shadow-sm border-0 text-center p-4">
                <div class="service-icon mb-3">
                    <i class="bi bi-bar-chart-steps display-5 text-warning"></i>
                </div>
                <h5 class="fw-semibold mb-2">Admin Dashboard</h5>
                <p class="text-muted mb-3">Access analytics, reports, and admin tools.</p>
                <a asp-action="Dashboard" class="btn btn-outline-warning w-100">Go to Dashboard</a>
            </div>
        </div>
    </div>
</div>

<style>
.avatar-circle {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    font-size: 1.25rem;
    background: linear-gradient(135deg, #4f8cff 0%, #6dd5ed 100%);
    color: #fff;
    box-shadow: 0 2px 8px rgba(79,140,255,0.15);
}
.table thead th {
    font-size: 1.05rem;
    font-weight: 600;
    letter-spacing: 0.02em;
}
.table-hover tbody tr:hover {
    background-color: #f5faff;
}
.badge {
    font-size: 1rem;
    font-weight: 500;
}
.service-card {
    transition: transform 0.18s cubic-bezier(.4,2,.6,1), box-shadow 0.18s cubic-bezier(.4,2,.6,1);
    border-radius: 1.25rem;
    background: #fafdff;
}
.service-card:hover {
    transform: translateY(-6px) scale(1.03);
    box-shadow: 0 8px 32px rgba(79,140,255,0.13), 0 1.5px 6px rgba(0,0,0,0.04);
    background: #f5faff;
}
.service-icon {
    width: 64px;
    height: 64px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 1rem auto;
    border-radius: 50%;
    background: linear-gradient(135deg, #e3f0ff 0%, #fafdff 100%);
    box-shadow: 0 2px 8px rgba(79,140,255,0.07);
}
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            console.log("Admin users page loaded successfully");
        });
    </script>
}
