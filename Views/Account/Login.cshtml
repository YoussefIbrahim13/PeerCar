@model CarRentalMVC.Models.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<!-- Hero Section with Background -->
<div class="hero-section position-relative mb-5">
    <div class="hero-overlay"></div>
    <div class="container position-relative py-5">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto text-center text-white">
                <h1 class="display-3 fw-bold mb-4 animate__animated animate__fadeInDown">Welcome Back</h1>
                <p class="lead fs-4 mb-4 animate__animated animate__fadeInUp">Sign in to your PeerCar account</p>
            </div>
        </div>
    </div>
</div>

<!-- Login Form Section -->
<div class="container mb-5">
    <div class="row">
        <div class="col-lg-6 col-md-8 mx-auto">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4 p-md-5">
                    <h4 class="card-title fw-bold mb-4 text-center">Account Login</h4>
                    
                    <form asp-action="Login" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>
                        
                        <div class="mb-4">
                            <label asp-for="Email" class="form-label fw-semibold">Email Address</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-envelope"></i></span>
                                <input asp-for="Email" class="form-control" placeholder="Enter your email" />
                            </div>
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="mb-3 position-relative">
                            <label asp-for="Password" class="form-label">Password</label>
                            <div class="input-group">
                                <input asp-for="Password" class="form-control" type="password" id="passwordInput" autocomplete="current-password" />
                                <button type="button" class="btn btn-outline-secondary" id="togglePassword" tabindex="-1">
                                    <i class="bi bi-eye" id="togglePasswordIcon"></i>
                                </button>
                            </div>
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <div class="form-check">
                                <input asp-for="RememberMe" class="form-check-input" type="checkbox" />
                                <label asp-for="RememberMe" class="form-check-label">Remember me</label>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <a asp-action="ForgotPassword" asp-controller="Account" class="link-primary small">Forgot your password?</a>
                        </div>

                        <div class="d-grid mb-4">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="bi bi-box-arrow-in-right me-2"></i>Sign In
                            </button>
                        </div>
                        
                        <div class="text-center">
                            <p class="mb-0">Don't have an account? <a asp-action="Register" class="text-primary fw-semibold">Register now</a></p>
                        </div>
                    </form>

                    @if (ViewBag.Resent == true)
                    {
                        <div class="alert alert-success text-center">A new confirmation email has been sent. Please check your inbox.</div>
                    }

                    @* The following will show the resend link if the error is present in ModelState *@
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        if (error.ErrorMessage.Contains("Resend confirmation email"))
                        {
                            <div class="text-center mt-2">
                                @Html.Raw(error.ErrorMessage)
                            </div>
                        }
                    }

                    @if (TempData["ToastSuccess"] != null)
                    {
                        <div class="toast align-items-center text-bg-success border-0 show position-fixed top-0 end-0 m-3" role="alert" aria-live="assertive" aria-atomic="true" id="toastSuccess">
                            <div class="d-flex">
                                <div class="toast-body">@TempData["ToastSuccess"]</div>
                                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                            </div>
                        </div>
                    }
                    @if (TempData["ToastError"] != null)
                    {
                        <div class="toast align-items-center text-bg-danger border-0 show position-fixed top-0 end-0 m-3" role="alert" aria-live="assertive" aria-atomic="true" id="toastError">
                            <div class="d-flex">
                                <div class="toast-body">@TempData["ToastError"]</div>
                                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const passwordInput = document.getElementById('passwordInput');
            const togglePassword = document.getElementById('togglePassword');
            const togglePasswordIcon = document.getElementById('togglePasswordIcon');

            togglePassword.addEventListener('click', function () {
                const type = passwordInput.type === 'password' ? 'text' : 'password';
                passwordInput.type = type;
                togglePasswordIcon.classList.toggle('bi-eye');
                togglePasswordIcon.classList.toggle('bi-eye-slash');
            });
        });

        setTimeout(function() {
            var toastSuccess = document.getElementById('toastSuccess');
            if (toastSuccess) toastSuccess.style.display = 'none';
            var toastError = document.getElementById('toastError');
            if (toastError) toastError.style.display = 'none';
        }, 4000);
    </script>
}